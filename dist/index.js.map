{"version":3,"file":"index.js","sources":["../src/event-emitter-dom/event-emitter-dom.js"],"sourcesContent":["export class EventEmitterDOM {\n    constructor() {\n        this.subscriptions = [];\n    }\n\n    /**\n     * Emits the arguments to all subscribed callbacks\n     *\n     * @param args {any} How many and of type you want\n     */\n    emit(...args) {\n        this.subscriptions.forEach(subscription => {\n            subscription(...args);\n        });\n    }\n\n    /**\n     * Subscribes an callback to receive a future emit\n     *\n     * @param callback {Function} A callback\n     * @returns {Function}\n     */\n    subscribe(callback) {\n        const subscription = callback;\n\n        subscription.remove = () => {\n            this.remove(this.subscriptions.indexOf(subscription));\n        };\n\n        this.subscriptions.push(subscription);\n\n        return subscription;\n    }\n\n    /**\n     * Removes the subscribed callback\n     *\n     * @param index {Integer} The callback/subscription index\n     */\n    remove(index) {\n        this.subscriptions.splice(index, 1);\n    }\n}"],"names":["EventEmitterDOM","subscriptions","args","forEach","callback","subscription","remove","_this","indexOf","push","index","splice"],"mappings":"4XAAaA,oEAEAC,+FAQDC,8CACCD,cAAcE,QAAQ,2BACPD,uCAUdE,cACAC,EAAeD,WAERE,OAAS,aACbA,OAAOC,EAAKN,cAAcO,QAAQH,UAGtCJ,cAAcQ,KAAKJ,GAEjBA,iCAQJK,QACET,cAAcU,OAAOD,EAAO"}