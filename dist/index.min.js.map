{"version":3,"file":"index.min.js","sources":["../src/mitter/mitter.js"],"sourcesContent":["export default class Mitter {\n  constructor () {\n    this.subscriptions = []\n  }\n\n  /**\n   * Emits the arguments to all subscribed callbacks\n   *\n   * @param args {any} A list of values to be emitted\n   */\n  emit (...args) {\n    this.subscriptions.forEach(subscription => {\n      subscription(...args)\n    })\n  }\n\n  /**\n   * Subscribes an callback to receive a future emit\n   *\n   * @param callback {Function} A function to handle the emitted event\n   * @returns {Function}\n   */\n  subscribe (callback) {\n    this.subscriptions.push(callback)\n\n    return {\n      remove: () => {\n        const index = this.subscriptions.indexOf(callback)\n        this.remove(index)\n      }\n    }\n  }\n\n  /**\n   * Removes the subscribed callback\n   *\n   * @param index {Number} The subscription index to be removed\n   */\n  remove (index) {\n    this.subscriptions.splice(index, 1)\n  }\n}\n"],"names":["Mitter","subscriptions","args","forEach","callback","push","index","_this","indexOf","remove","splice"],"mappings":"4XAAqBA,2DAEZC,+FAQEC,8CACFD,cAAcE,QAAQ,2BACTD,uCAUTE,0BACJH,cAAcI,KAAKD,WAGd,eACAE,EAAQC,EAAKN,cAAcO,QAAQJ,KACpCK,OAAOH,oCAUVA,QACDL,cAAcS,OAAOJ,EAAO"}